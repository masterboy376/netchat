import React, { useContext, useState, useEffect } from 'react'
import Head from 'next/head'
import Link from 'next/link'
import { MainContext } from '../context/mainContext'
import FriendList from '../components/FriendList'
import ChatView from '../components/ChatView'
import SideBar from '../components/SideBar'
import AddFriend from '../components/AddFriend'
import FriendRequests from '../components/FriendRequests'
import Modal from 'react-modal'

export default function Home() {
  const { auth, router, isDark, isLeftBar, onAuthStateChanged, addFriendModal, setAddFriendModal, friendRequestsModal, setFriendRequestsModal } = useContext(MainContext)

  const init = async () => {
    onAuthStateChanged(auth, (user) => {
      if (!user) {
        router.push('/signin')
      }
    })
  }

  useEffect(() => {
    init()
  }, [])

  const customStyles = {
    content: {
      top: '50%',
      left: '50%',
      right: 'auto',
      bottom: 'auto',
      transform: 'translate(-50%, -50%)',
      backgroundColor: `${isDark?'rgb(17 ,24, 39)':'white'}`,
      padding: 0,
      border: `1px solid ${isDark?'rgb(31 41 55)':'rgb(229 231 235)'}`,
      borderRadius: '15px',
      width: '90%',
      maxWidth: '700px',
    },
    overlay: {
      backgroundColor: 'rgba(17, 24, 39, 0.5)',
    },
  }


  return (
    <>
      <Head>
        <title>NetChat</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.svg" />
      </Head>

      <div className={`w-full min-h-screen ${isDark ? 'bg-gray-900 text-gray-300' : 'bg-white text-gray-900'}`}>
        {auth.currentUser &&
          <>
            <div className={`absolute z-50 top-0 left-0 w-full sm:w-1/4 transition-all duration-300 sm:z-0 ${isLeftBar ? '-translate-x-0' : '-translate-x-full'} sm:-translate-x-0 h-screen`}>
              <FriendList />
            </div>
            <div className={`absolute z-0 top-0 right-0 w-full sm:w-3/4 h-screen`}>
              <ChatView />
            </div>
            <SideBar />
          </>
        }
      </div>

      <Modal isOpen={addFriendModal} onRequestClose={() => { setAddFriendModal(false) }} style={customStyles}>
        <>
        <AddFriend />
        </>
      </Modal>
      <Modal isOpen={friendRequestsModal} onRequestClose={() => { setFriendRequestsModal(false) }} style={customStyles}>
        <>
        <FriendRequests />
        </>
      </Modal>
    </>
  )
}
